# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import gymEnv_pb2 as gymEnv__pb2


class GymServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.make = channel.unary_unary(
        '/gymEnv.GymService/make',
        request_serializer=gymEnv__pb2.Msg.SerializeToString,
        response_deserializer=gymEnv__pb2.EnvSpace.FromString,
        )
    self.reset = channel.unary_unary(
        '/gymEnv.GymService/reset',
        request_serializer=gymEnv__pb2.Msg.SerializeToString,
        response_deserializer=gymEnv__pb2.Observation.FromString,
        )
    self.step = channel.unary_unary(
        '/gymEnv.GymService/step',
        request_serializer=gymEnv__pb2.Action.SerializeToString,
        response_deserializer=gymEnv__pb2.StepResult.FromString,
        )
    self.render = channel.unary_unary(
        '/gymEnv.GymService/render',
        request_serializer=gymEnv__pb2.Msg.SerializeToString,
        response_deserializer=gymEnv__pb2.Msg.FromString,
        )
    self.close = channel.unary_unary(
        '/gymEnv.GymService/close',
        request_serializer=gymEnv__pb2.Msg.SerializeToString,
        response_deserializer=gymEnv__pb2.Msg.FromString,
        )


class GymServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def make(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def reset(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def step(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def render(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def close(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GymServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'make': grpc.unary_unary_rpc_method_handler(
          servicer.make,
          request_deserializer=gymEnv__pb2.Msg.FromString,
          response_serializer=gymEnv__pb2.EnvSpace.SerializeToString,
      ),
      'reset': grpc.unary_unary_rpc_method_handler(
          servicer.reset,
          request_deserializer=gymEnv__pb2.Msg.FromString,
          response_serializer=gymEnv__pb2.Observation.SerializeToString,
      ),
      'step': grpc.unary_unary_rpc_method_handler(
          servicer.step,
          request_deserializer=gymEnv__pb2.Action.FromString,
          response_serializer=gymEnv__pb2.StepResult.SerializeToString,
      ),
      'render': grpc.unary_unary_rpc_method_handler(
          servicer.render,
          request_deserializer=gymEnv__pb2.Msg.FromString,
          response_serializer=gymEnv__pb2.Msg.SerializeToString,
      ),
      'close': grpc.unary_unary_rpc_method_handler(
          servicer.close,
          request_deserializer=gymEnv__pb2.Msg.FromString,
          response_serializer=gymEnv__pb2.Msg.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'gymEnv.GymService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
